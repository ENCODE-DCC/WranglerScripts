set -x
#fastq=$(gzip -c $1 | dx upload - -o $1 --brief)
#dx-jobutil-add-output fastq "$fastq" --class=array:file

declare -i spot_count_SRA
spot_count_SRA=$2

paste $1 ${1%_1.fastq}_2.fastq | paste - - - - | split -l 10000000 -a 3
rm $1
rm ${1&_1.fastq}_2.fastq

for x in x???; do
    fh=`expr $fh + 1`
    echo "Processing $fh"
    shuf ${x} > ${x}.shuffed
    rm ${x}
    cat ${x}.shuffed | awk -v fh="$fh" -F'\t' 'BEGIN{}{OFS="\n"; print $1,$3,$5,$7 > ("output1." fh); print $2,$4,$6,$8 > ("output2." fh)}' &
    while [ `top -n 1 -b -d 10 | grep shuf | wc -l` -ge `nproc` ]
    do
        echo "Waiting on shuf"
        sleep 60
    done
done

wait

for item in `ls *.shuffed`
do
    rm $item
done

declare -i count1
declare -i count2
count1=$(cat output1* | echo $((`wc -l`/4)))
count2=$(cat output2* | echo $((`wc -l`/4)))

echo $count1, $count2, $spot_count_SRA

if [ $count1 -ne $spot_count_SRA ]; then
    echo "FastQ1 fail."
    exit 1
fi

if [ $count2 -ne $spot_count_SRA ]; then
    echo "FastQ2 fail."
    exit 1
fi

fastq=`cat output1* | gzip -c | dx upload - -o $1.gz --brief`
dx-jobutil-add-output fastq "$fastq" --class=array:file 
fastq=`cat output2* | gzip -c | dx upload - -o ${1%_1.fastq}_2.fastq.gz --brief`
dx-jobutil-add-output fastq "$fastq" --class=array:file 



